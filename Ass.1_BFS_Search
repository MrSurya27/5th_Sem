#include<bits/stdc++.h>
#include<vector>
#include<queue>
using namespace std;

void addedge(vector<int> adj[] , int u , int v)
{
    adj[u].push_back(v);
    adj[v].push_back(u);
}
void printedges(vector<int> adj[],int vertices)
{
    for(int j=0 ;j < vertices ;j++)
    {
        cout<<j<<"-->";
        for(int i : adj[j])
        {
            cout<<"|"<<i<<"|--";
        }
        cout<<"\n";
    }   
}
void BFS(vector<int> adj[],int v,int s)
{
    bool visited[v+1];
    for(int i=0;i<v;i++)
    {
        visited[i] = false;
    }
    queue<int> q;
    q.push(s);
    visited[s] = true;
    while(q.empty() == false)
    {
        int curr = q.front();
        q.pop();
        cout<<curr<<" ";
        for(int k : adj[curr])
        {
            if(visited[k] == false)
            {
                q.push(k);
                visited[k] = true;
            }
        }
    }
}
int main()
{	
    int v = 5;
    vector<int> adj[v];
    addedge(adj,0,1);
    addedge(adj,0,2);
    addedge(adj,1,2);
    addedge(adj,1,3);
    addedge(adj,2,3);
    addedge(adj,2,4);
    addedge(adj,3,4);
    //printedges(adj,v);
    int q=0;
    BFS(adj,v,q);
    return 0;
}
